pubilc static ListNode reverse(ListNode head){
	ListNode curr = head;
	ListNode prev = null;
	
	while(curr != null){
		ListNode fowd = curr.next;

		curr.next = prev;

		prev = curr;
		curr = fowd;
	}
	return head;
}

public static ListNode addTwoNumbers(ListNode head1, ListNode head2){
	ListNode reverse1 = reverse(head1);
	ListNode reverse2 = reverse(head2);
	ListNode c1 = reverse1;
	ListNode c2 = reverse2;
	int carry = 0,sum = 0;

	ListNode dummy = new ListNode(-1);
	ListNode ptr = dummy;

	while(c1 != null || c2 != null || carry !=0){
		sum = (c1 != null ? c1.val : 0)  +(c2 != null ? c2.val:0) + carry;
		sum = sum%10;
		carry = sum/10;
	
		ptr.next = new ListNode(sum);
		ptr = ptr.next;

		if(c1!=null) c1 = c1.next;
		if(c2 !=null) c2 = c2.next;
		
	}
	ListNode head = dummy.next;
	head1 = reverse(reverse1);
	head2 = reverse(reverse2);
	return head;
}








